#docker-compose -p npmresponder up -d

version: "3"

services:

  ##################################
  #     Setup api container
  ##################################

  api:
    container_name: npm_responder-api-app
    image: kiseloff/npm_responder-api:latest
    expose:
      - ${APP_API_PORT}
    environment:
      NPM_RESOLVER_API_USERNAME: ${APP_API_USERNAME}
      NPM_RESOLVER_API_SNMPv3_SECRET: ${APP_API_SNMPv3_SECRET}
      NPM_RESOLVER_API_SSH_SECRET: ${APP_API_SSH_SECRET}
      NPM_RESOLVER_API_COMMUNITY: ${APP_API_COMMUNITY}
      NPM_RESOLVER_API_PORT: ${APP_API_PORT}
    volumes:
      - ~/npm_responder_logs:/usr/src/app/logs
    ports:
      - ${APP_API_PORT}:${APP_API_PORT}

  ##################################
  #     Setup telnetsrv container
  ##################################

  telnetsrv:
    container_name: npm_responder-telnetsrv-app
    image: kiseloff/npm_responder-telnetsrv:latest
    expose:
      - ${APP_TELNETSRV_PORT}
    environment:
      APP_API_HOST: api
      APP_API_PORT: ${APP_API_PORT}
    volumes:
      - ~/npm_responder_logs:/usr/src/app/logs
    ports:
      - ${APP_TELNETSRV_PORT}:${APP_TELNETSRV_PORT}
    depends_on:
      - api

  ##################################
  #     Setup webui container
  ##################################


  webui:
    container_name: npm_responder-webui-app
    build:
      context: .
      args:
        REACT_APP_SERVER_HOST: ${APP_API_EXTERNAL_IP}
        REACT_APP_SERVER_PORT: ${APP_API_PORT}
    image: kiseloff/npm_responder-webui:latest
    expose:
      - "80"
    ports:
      - ${APP_WEBUI_PORT}:80
    depends_on:
      - api
